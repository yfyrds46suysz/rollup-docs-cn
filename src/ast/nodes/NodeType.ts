export type tArrayExpression = 'ArrayExpression';
export type tArrayPattern = 'ArrayPattern';
export type tArrowFunctionExpression = 'ArrowFunctionExpression';
export type tAssignmentExpression = 'AssignmentExpression';
export type tAssignmentPattern = 'AssignmentPattern';
export type tAwaitExpression = 'AwaitExpression';
export type tBinaryExpression = 'BinaryExpression';
export type tBlockStatement = 'BlockStatement';
export type tBreakStatement = 'BreakStatement';
export type tCallExpression = 'CallExpression';
export type tCatchClause = 'CatchClause';
export type tClassBody = 'ClassBody';
export type tClassDeclaration = 'ClassDeclaration';
export type tClassExpression = 'ClassExpression';
export type tConditionalExpression = 'ConditionalExpression';
export type tDoWhileStatement = 'DoWhileStatement';
export type tEmptyStatement = 'EmptyStatement';
export type tExportAllDeclaration = 'ExportAllDeclaration';
export type tExportDefaultDeclaration = 'ExportDefaultDeclaration';
export type tExportNamedDeclaration = 'ExportNamedDeclaration';
export type tExportSpecifier = 'ExportSpecifier';
export type tExpressionStatement = 'ExpressionStatement';
export type tForStatement = 'ForStatement';
export type tForInStatement = 'ForInStatement';
export type tForOfStatement = 'ForOfStatement';
export type tFunctionDeclaration = 'FunctionDeclaration';
export type tFunctionExpression = 'FunctionExpression';
export type tIdentifier = 'Identifier';
export type tIfStatement = 'IfStatement';
export type tImport = 'Import';
export type tImportDeclaration = 'ImportDeclaration';
export type tImportDefaultSpecifier = 'ImportDefaultSpecifier';
export type tImportNamespaceSpecifier = 'ImportNamespaceSpecifier';
export type tImportSpecifier = 'ImportSpecifier';
export type tLabeledStatement = 'LabeledStatement';
export type tLiteral = 'Literal';
export type tLogicalExpression = 'LogicalExpression';
export type tMemberExpression = 'MemberExpression';
export type tMetaProperty = 'MetaProperty';
export type tMethodDefinition = 'MethodDefinition';
export type tNewExpression = 'NewExpression';
export type tObjectExpression = 'ObjectExpression';
export type tObjectPattern = 'ObjectPattern';
export type tProgram = 'Program';
export type tProperty = 'Property';
export type tRestElement = 'RestElement';
export type tReturnStatement = 'ReturnStatement';
export type tSequenceExpression = 'SequenceExpression';
export type tSpreadElement = 'SpreadElement';
export type tSwitchCase = 'SwitchCase';
export type tSwitchStatement = 'SwitchStatement';
export type tTaggedTemplateExpression = 'TaggedTemplateExpression';
export type tTemplateElement = 'TemplateElement';
export type tTemplateLiteral = 'TemplateLiteral';
export type tThisExpression = 'ThisExpression';
export type tThrowStatement = 'ThrowStatement';
export type tTryStatement = 'TryStatement';
export type tUnaryExpression = 'UnaryExpression';
export type tUpdateExpression = 'UpdateExpression';
export type tVariableDeclarator = 'VariableDeclarator';
export type tVariableDeclaration = 'VariableDeclaration';
export type tWhileStatement = 'WhileStatement';
export type tYieldExpression = 'YieldExpression';

export const ArrayExpression = 'ArrayExpression';
export const ArrayPattern = 'ArrayPattern';
export const ArrowFunctionExpression = 'ArrowFunctionExpression';
export const AssignmentExpression = 'AssignmentExpression';
export const AssignmentPattern = 'AssignmentPattern';
export const AwaitExpression = 'AwaitExpression';
export const BinaryExpression = 'BinaryExpression';
export const BlockStatement = 'BlockStatement';
export const BreakStatement = 'BreakStatement';
export const CallExpression = 'CallExpression';
export const CatchClause = 'CatchClause';
export const ClassBody = 'ClassBody';
export const ClassDeclaration = 'ClassDeclaration';
export const ClassExpression = 'ClassExpression';
export const ConditionalExpression = 'ConditionalExpression';
export const DoWhileStatement = 'DoWhileStatement';
export const EmptyStatement = 'EmptyStatement';
export const ExportAllDeclaration = 'ExportAllDeclaration';
export const ExportDefaultDeclaration = 'ExportDefaultDeclaration';
export const ExportNamedDeclaration = 'ExportNamedDeclaration';
export const ExportSpecifier = 'ExportSpecifier';
export const ExpressionStatement = 'ExpressionStatement';
export const ForStatement = 'ForStatement';
export const ForInStatement = 'ForInStatement';
export const ForOfStatement = 'ForOfStatement';
export const FunctionDeclaration = 'FunctionDeclaration';
export const FunctionExpression = 'FunctionExpression';
export const Identifier = 'Identifier';
export const IfStatement = 'IfStatement';
export const Import = 'Import';
export const ImportDeclaration = 'ImportDeclaration';
export const ImportDefaultSpecifier = 'ImportDefaultSpecifier';
export const ImportNamespaceSpecifier = 'ImportNamespaceSpecifier';
export const ImportSpecifier = 'ImportSpecifier';
export const LabeledStatement = 'LabeledStatement';
export const Literal = 'Literal';
export const LogicalExpression = 'LogicalExpression';
export const MemberExpression = 'MemberExpression';
export const MetaProperty = 'MetaProperty';
export const MethodDefinition = 'MethodDefinition';
export const NewExpression = 'NewExpression';
export const ObjectExpression = 'ObjectExpression';
export const ObjectPattern = 'ObjectPattern';
export const Program = 'Program';
export const Property = 'Property';
export const RestElement = 'RestElement';
export const ReturnStatement = 'ReturnStatement';
export const SequenceExpression = 'SequenceExpression';
export const SpreadElement = 'SpreadElement';
export const SwitchCase = 'SwitchCase';
export const SwitchStatement = 'SwitchStatement';
export const TaggedTemplateExpression = 'TaggedTemplateExpression';
export const TemplateElement = 'TemplateElement';
export const TemplateLiteral = 'TemplateLiteral';
export const ThisExpression = 'ThisExpression';
export const ThrowStatement = 'ThrowStatement';
export const TryStatement = 'TryStatement';
export const UnaryExpression = 'UnaryExpression';
export const UpdateExpression = 'UpdateExpression';
export const VariableDeclarator = 'VariableDeclarator';
export const VariableDeclaration = 'VariableDeclaration';
export const WhileStatement = 'WhileStatement';
export const YieldExpression = 'YieldExpression';
